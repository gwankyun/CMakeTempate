function(map_create _map)
	set(${_map}_key PARENT_SCOPE)
endfunction()

function(map_add _map _key _value)
	list(APPEND ${_map}_key ${_key})
	list(REMOVE_DUPLICATES ${_map}_key)
	set(${_map}_key ${${_map}_key} PARENT_SCOPE)
	set(${_map}${_key} ${_value} PARENT_SCOPE)
endfunction()

function(map_get _map _key _value)
	set(${_value} ${${_map}${_key}} PARENT_SCOPE)
endfunction()

function(map_get _map _key _value)
	set(${_value} ${${_map}${_key}} PARENT_SCOPE)
endfunction()

function(map_size _map _result)
	list(LENGTH ${_map}_key out)
	set(${_result} ${out} PARENT_SCOPE)
endfunction()

function(map_contain _map _key _result)
	list(FIND ${_map}_key ${_key} out)
	if(${out} EQUAL -1)
		set(${_result} FALSE PARENT_SCOPE)
	else()
		set(${_result} TRUE PARENT_SCOPE)
	endif()
endfunction()

function(map_remove _map _key)
	map_contain(${_map} ${_key} out)
	if(${out})
		message("yes")
		list(REMOVE_ITEM ${_map}_key ${_key})
		set(${_map}_key ${${_map}_key} PARENT_SCOPE)
		unset(${_map}${_key} PARENT_SCOPE)
	endif()
endfunction()

function(map_clear _map)
	foreach(item ${${_map}_key})
		list(REMOVE_ITEM ${_map}_key ${item})
		set(${_map}_key ${${_map}_key} PARENT_SCOPE)
		unset(${_map}${_key} PARENT_SCOPE)
	endforeach()
endfunction()
